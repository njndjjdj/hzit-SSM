<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyc.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.zyc.entity.Student">
        <id column="sid" jdbcType="BIGINT" property="sid" />
        <result column="sname" jdbcType="VARCHAR" property="sname" />
        <result column="sex" jdbcType="CHAR" property="sex" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="addr" jdbcType="VARCHAR" property="addr" />
        <result column="cid" jdbcType="INTEGER" property="cid" />
        <result column="deleted" jdbcType="INTEGER" property="deleted" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        sid, sname, sex, age, addr, cid, deleted, create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="com.zyc.entity.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where sid = #{sid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from student
        where sid = #{sid,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zyc.entity.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.zyc.entity.Student">
        insert into student (sid, sname, sex,
                             age, addr, cid, deleted,
                             create_time, update_time)
        values (#{sid,jdbcType=BIGINT}, #{sname,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR},
                #{age,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.zyc.entity.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="sname != null">
                sname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="addr != null">
                addr,
            </if>
            <if test="cid != null">
                cid,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=BIGINT},
            </if>
            <if test="sname != null">
                #{sname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="addr != null">
                #{addr,jdbcType=VARCHAR},
            </if>
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zyc.entity.StudentExample" resultType="java.lang.Long">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="row.sid != null">
                sid = #{row.sid,jdbcType=BIGINT},
            </if>
            <if test="row.sname != null">
                sname = #{row.sname,jdbcType=VARCHAR},
            </if>
            <if test="row.sex != null">
                sex = #{row.sex,jdbcType=CHAR},
            </if>
            <if test="row.age != null">
                age = #{row.age,jdbcType=INTEGER},
            </if>
            <if test="row.addr != null">
                addr = #{row.addr,jdbcType=VARCHAR},
            </if>
            <if test="row.cid != null">
                cid = #{row.cid,jdbcType=INTEGER},
            </if>
            <if test="row.deleted != null">
                deleted = #{row.deleted,jdbcType=INTEGER},
            </if>
            <if test="row.createTime != null">
                create_time = #{row.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="row.updateTime != null">
                update_time = #{row.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set sid = #{row.sid,jdbcType=BIGINT},
        sname = #{row.sname,jdbcType=VARCHAR},
        sex = #{row.sex,jdbcType=CHAR},
        age = #{row.age,jdbcType=INTEGER},
        addr = #{row.addr,jdbcType=VARCHAR},
        cid = #{row.cid,jdbcType=INTEGER},
        deleted = #{row.deleted,jdbcType=INTEGER},
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
        update_time = #{row.updateTime,jdbcType=TIMESTAMP}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zyc.entity.Student">
        update student
        <set>
            <if test="sname != null">
                sname = #{sname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="addr != null">
                addr = #{addr,jdbcType=VARCHAR},
            </if>
            <if test="cid != null">
                cid = #{cid,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where sid = #{sid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zyc.entity.Student">
        update student
        set sname = #{sname,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=CHAR},
            age = #{age,jdbcType=INTEGER},
            addr = #{addr,jdbcType=VARCHAR},
            cid = #{cid,jdbcType=INTEGER},
            deleted = #{deleted,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where sid = #{sid,jdbcType=BIGINT}
    </update>
</mapper>